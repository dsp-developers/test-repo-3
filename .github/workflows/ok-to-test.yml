name: Slash Command Listener

on:
  issue_comment:
    types:
      - created

jobs:
  process-command:
    runs-on: ubuntu-latest
    if: (github.event.comment.body == '/ok-to-test') || (github.event.comment.body == '/rerun')
    outputs:
      runs: ${{ steps.get-runs.outputs.runs }}
    steps:
      # Check if the author is a member or Owner
      - name: Check Slash Command and User Association
        id: check-condition
        run: |
          echo "slash_command=${{github.event.comment.body}}" >> $GITHUB_ENV
          if [[ "${{ github.event.comment.author_association }}" == "MEMBER" || "${{ github.event.comment.author_association }}" == "OWNER" ]]; then
            echo "condition_met=true" >> $GITHUB_ENV
          else
            echo "User does not have permission to trigger this command."
            echo "condition_met=false" >> $GITHUB_ENV
          fi

      - name: Leave a Comment on Precondition Fail
        if: env.condition_met == 'false'
        env:
          message: ðŸš« This command cannot be processed. Only organization members or owners can use the commands.
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh issue comment ${{ github.event.issue.number }} --repo "${{ github.repository }}" --body "${{ env.message }}"
          echo ${message}
          exit 1

      - name: Check if comment is on a pull request
        id: check-pr
        run: |
          if [[ -z "${{ github.event.issue.pull_request }}" ]]; then
            echo "Comment is not on a pull request."
            exit 1
          fi
          echo "PR_URL=${{ github.event.issue.pull_request.url }}" >> $GITHUB_ENV

      - name: Fetch pull request sha
        id: fetch-pr-sha
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_URL="${PR_URL}"
          PR_DATA=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" "$PR_URL")
          PR_SHA=$(echo "$PR_DATA" | jq -r '.head.sha')
          echo "PR_SHA=$PR_SHA" >> $GITHUB_ENV

      - name: Get runs
        id: get-runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_SHA: ${{ env.PR_SHA }}
        run: |
          runs=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=${PR_SHA}" | \
            jq -r '.workflow_runs[]? | .id' | tr '\n' ',' | sed 's/,$//')
            
          if [[ -z "$runs" ]]; then
            echo "No workflow runs found for the given head SHA."
            exit 1
          else
            echo "Found workflow runs: $runs"
            echo "wf_runs=$runs" >> $GITHUB_ENV
          fi
