name: Slash Command Listener

on:
  issue_comment:
    types:
      - created

jobs:
  process-command:
    runs-on: ubuntu-latest
    if: (github.event.comment.body == '/ok-to-test') || (github.event.comment.body == '/rerun')
    outputs:
      command: ${{ github.event.comment.body }}
    steps:
      # Check if the author is a member or Owner
      - name: Check Slash Command and User Association
        id: check-condition
        run: |
          echo "slash_command=${{github.event.comment.body}}" >> $GITHUB_ENV
          if [[ "${{ github.event.comment.author_association }}" == "MEMBER" || "${{ github.event.comment.author_association }}" == "OWNER" ]]; then
            echo "condition_met=true" >> $GITHUB_ENV
          else
            echo "User does not have permission to trigger this command."
            echo "condition_met=false" >> $GITHUB_ENV
          fi


      - name: Leave a Comment
        env:
          message: ðŸš« This command cannot be processed. Only organization members or owners can use the commands.
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          if [[ "${{ env.condition_met }}" == "false" ]]; then
            gh issue comment ${{ github.event.issue.number }} --repo "${{ github.repository }}" --body "${{ env.message }}"
            exit 1
          fi

  approve:
    runs-on: ubuntu-latest
    needs: process-command
    if: github.event.comment.body == '/ok-to-test'
    steps:
      # Approve Run if the condition is met
      - name: Approve Run
        id: approve
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Extract the PR head SHA
          pr_sha=${{ github.event.issue.pull_request.head.sha }}
          
          # Get the run_id of the current workflow run
          runs=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=$pr_sha" | \
            jq -r '.workflow_runs[] | select(.conclusion == "action_required") | .id')

          # Approve the workflow run
          if [[ -z "$runs" ]]; then
            msg="No workflow runs requiring approval detected for this Pull Request."
            echo "output_msg=${msg}" >> $GITHUB_ENV
          else
            echo "Found workflow runs requiring approval: $runs"
            # Approve each workflow run
            for run_id in $runs; do
              curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/approve"
              echo "Approved workflow run: $run_id" 
            done
            msg="Approvals successfully granted for pending runs."
            echo "output_msg=${msg}" >> $GITHUB_ENV
          fi





      - name: Leave a Comment
        env:
          message: ${{ env.output_msg }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          gh issue comment ${{ github.event.issue.number }} --repo "${{ github.repository }}" --body "${{ env.message }}"


      # Comment on output message
#      - name: Post Comment for Invalid Condition
#        if: (steps.approve.outcome == 'success') && env.output_msg
#        uses: peter-evans/create-or-update-comment@v3
#        with:
#          token: ${{ secrets.GITHUB_TOKEN }}
#          issue-number: ${{ github.event.issue.number }}
#          body: ${{ env.output_msg }}
  rerun:
    runs-on: ubuntu-latest
    needs: process-command
    if: github.event.comment.body == '/rerun'
    steps:
      - name: Re-Run
        id: rerun
        if: env.condition_met == 'true' && (github.event.comment.body == '/rerun')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pr_sha=${{ github.event.issue.pull_request.head.sha }}
          
          # Get the run_id of the current workflow run
          runs=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/actions/runs?head_sha=$pr_sha" | \
            jq -r '.workflow_runs[] | .id')

          if [[ -z "$runs" ]]; then
            msg="No workflow detected for this Pull Request."
            echo "output_msg=${msg}" >> $GITHUB_ENV
          else
            echo "Found workflow runs requiring approval: $runs"
            # Rerun each workflow run
            for run_id in $runs; do
              curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
                -H "Accept: application/vnd.github.v3+json" \
                "https://api.github.com/repos/${{ github.repository }}/actions/runs/$run_id/rerun"
              echo "Triggered workflow run: $run_id" 
            done
            msg="Runs for this pull request were re-triggered."
            echo "output_msg=${msg}" >> $GITHUB_ENV
          fi



      - name: Leave a Comment
        env:
          message: ${{ env.output_msg }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          if [[ "${{ env.condition_met }}" == "false" ]]; then
            gh issue comment ${{ github.event.issue.number }} --repo "${{ github.repository }}" --body "${{ env.message }}"
            exit 1
          fi